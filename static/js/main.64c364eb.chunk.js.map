{"version":3,"sources":["SeasonDisplay.js","Loading.js","index.js"],"names":["seasonConfig","summer","text","iconName","winter","tex","SeasonDisplay","props","lat","month","Season","Date","getMonth","className","Loading","message","defaultProps","App","state","errorMessage","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","this","rednderContent","React","Component","ReactDOM","render","document","querySelector"],"mappings":"oKAGMA,G,MAAe,CACnBC,OAAQ,CACNC,KAAM,wBACNC,SAAU,OAEZC,OAAQ,CACNC,IAAK,qBACLF,SAAU,eA0BCG,EAdO,SAACC,GACrB,IATiBC,EAAKC,EAShBC,GATWF,EASQD,EAAMC,KATTC,GASc,IAAIE,MAAOC,YARnC,GAAKH,EAAQ,EAChBD,EAAM,EAAI,SAAW,SAErBA,EAAM,EAAI,SAAW,UAIC,EAGJR,EAAaU,GAAhCR,EAHuB,EAGvBA,KAAMC,EAHiB,EAGjBA,SAEd,OACE,yBAAKU,UAAS,yBAAoBH,IAChC,uBAAGG,UAAS,oBAAeV,EAAf,mBACZ,4BAAKD,GACL,uBAAGW,UAAS,qBAAgBV,EAAhB,qBC7BZW,G,KAAU,SAACP,GACf,OACE,yBAAKM,UAAU,oBACb,yBAAKA,UAAU,0BAA0BN,EAAMQ,YAKrDD,EAAQE,aAAe,CACrBD,QAAS,aAGID,QCETG,E,4MACJC,MAAQ,CAAEV,IAAK,KAAMW,aAAc,I,kEAEd,IAAD,OAClBC,OAAOC,UAAUC,YAAYC,oBAC3B,SAACC,GAAD,OAAc,EAAKC,SAAS,CAAEjB,IAAKgB,EAASE,OAAOC,cACnD,SAACC,GAAD,OAAS,EAAKH,SAAS,CAAEN,aAAcS,EAAIb,e,uCAK7C,OAAIc,KAAKX,MAAMC,eAAiBU,KAAKX,MAAMV,IAClC,uCAAaqB,KAAKX,MAAMC,eAE5BU,KAAKX,MAAMC,cAAgBU,KAAKX,MAAMV,IAEvC,6BACE,kBAAC,EAAD,CAAeA,IAAKqB,KAAKX,MAAMV,OAI9B,kBAAC,EAAD,CAASO,QAAQ,0C,+BAIxB,OAAO,6BAAMc,KAAKC,sB,GAzBJC,IAAMC,WA+BxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,W","file":"static/js/main.64c364eb.chunk.js","sourcesContent":["import \"./SeasonDisplay.css\";\r\nimport React from \"react\";\r\n\r\nconst seasonConfig = {\r\n  summer: {\r\n    text: \"Let's hit the beach!!\",\r\n    iconName: \"sun\",\r\n  },\r\n  winter: {\r\n    tex: \"Burr it is cold!!!\",\r\n    iconName: \"snowflake\",\r\n  },\r\n};\r\n\r\nconst getSeason = (lat, month) => {\r\n  if (month > 2 && month < 9) {\r\n    return lat > 0 ? \"summer\" : \"winter\";\r\n  } else {\r\n    return lat > 0 ? \"winter\" : \"summer\";\r\n  }\r\n};\r\n\r\nconst SeasonDisplay = (props) => {\r\n  const Season = getSeason(props.lat, new Date().getMonth());\r\n\r\n  const { text, iconName } = seasonConfig[Season];\r\n\r\n  return (\r\n    <div className={`season-display ${Season}`}>\r\n      <i className={`icon-left ${iconName} icon massive`} />\r\n      <h1>{text}</h1>\r\n      <i className={`icon-right ${iconName} icon massive`} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SeasonDisplay;\r\n","import React from \"react\";\r\n\r\nconst Loading = (props) => {\r\n  return (\r\n    <div className=\"ui active dimmer\">\r\n      <div className=\"ui massive text loader\">{props.message}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nLoading.defaultProps = {\r\n  message: \"Loading..\",\r\n};\r\n\r\nexport default Loading;\r\n","// Import react and reactDOM\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport SeasonDisplay from \"./SeasonDisplay\";\r\nimport faker from \"faker\";\r\nimport Loading from \"./Loading\";\r\n// Create a component\r\n\r\n// const App = () => {\r\n//   window.navigator.geolocation.getCurrentPosition(\r\n//     (position) => console.log(position),\r\n//     (err) => console.log(err)\r\n//   );\r\n//   return <div>Hellooo</div>;\r\n// };\r\n\r\nclass App extends React.Component {\r\n  state = { lat: null, errorMessage: \"\" };\r\n\r\n  componentDidMount() {\r\n    window.navigator.geolocation.getCurrentPosition(\r\n      (position) => this.setState({ lat: position.coords.latitude }),\r\n      (err) => this.setState({ errorMessage: err.message })\r\n    );\r\n  }\r\n\r\n  rednderContent() {\r\n    if (this.state.errorMessage && !this.state.lat) {\r\n      return <div>Error: {this.state.errorMessage}</div>;\r\n    }\r\n    if (!this.state.errorMessage && this.state.lat) {\r\n      return (\r\n        <div>\r\n          <SeasonDisplay lat={this.state.lat} />\r\n        </div>\r\n      );\r\n    }\r\n    return <Loading message=\"Please Accept the Location Requeswt\" />;\r\n  }\r\n\r\n  render() {\r\n    return <div>{this.rednderContent()}</div>;\r\n  }\r\n}\r\n\r\n// take the react component and show it on the screan\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}